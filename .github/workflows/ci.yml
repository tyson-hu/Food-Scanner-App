name: CI
on:
  pull_request: { branches: [ master ] }
  push: { branches: [ master ] }

jobs:
  build-test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      # If you need a specific Xcode, uncomment:
      # - uses: maxim-lobanov/setup-xcode@v1
      #   with: { xcode-version: '16.2' }

      - name: Cache DerivedData
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-dd-${{ hashFiles('**/*.swift') }}

      - name: List schemes (debug aid)
        run: xcodebuild -list

      - name: Build & Test (strict)
        run: |
          set -eo pipefail
          xcodebuild \
            -scheme "Food Scanner" \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
            SWIFT_STRICT_CONCURRENCY=complete \
            OTHER_SWIFT_FLAGS='-warnings-as-errors' \
            -enableCodeCoverage YES \
            test | xcpretty
        shell: bash

  lint:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install SwiftLint
        run: |
          brew install swiftlint
          
      - name: Install SwiftFormat
        run: |
          brew install swiftformat
          
      - name: SwiftFormat (check)
        run: swiftformat --lint "Food Scanner" "FoodScannerTests" "FoodScannerUITests"
        
      - name: SwiftLint (strict)
        run: swiftlint --strict

  codeql:
    runs-on: macos-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with: { languages: swift }
      - uses: github/codeql-action/analyze@v3

  guards:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fail on TODO/FIXME
        run: |
          if grep -RIn --exclude-dir=.build --exclude-dir=DerivedData -E 'TODO|FIXME' "Food Scanner" FoodScannerTests; then
            echo "::error::Found TODO/FIXME. Please resolve or annotate."; exit 1; fi
      - name: Ban legacy APIs
        run: |
          if grep -RIn -E 'UIWebView|NSURLConnection' "Food Scanner"; then
            echo "::error::Legacy API detected."; exit 1; fi
