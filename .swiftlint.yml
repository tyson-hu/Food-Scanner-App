included:
  - "Sources"
  - "Tests"

excluded:
  - "Sources/Platform/Shared/Config"
  - "Sources/Platform/iOS/App/Resources"
  - "Sources/Platform/iOS/App/Assets.xcassets"
  - "Sources/Platform/iOS/App/AppIcon.icon"
  - "Sources/Platform/iOS/App/PrivacyInfo.xcprivacy"
  - "Sources/Platform/iOS/App/Samples"
  - "DerivedData"
  - ".build"
  - "**/*.generated.swift"
  - "docs"
  - "scripts"
  - "*.xcodeproj"
  - "*.xctestplan"
  - "Tests/UI"  # UI tests may have different requirements

disabled_rules:
  - trailing_whitespace
  - line_length
  - function_body_length
  - file_length
  - type_body_length
  - vertical_parameter_alignment
  - vertical_parameter_alignment_on_call

opt_in_rules:
  - empty_count
  - force_unwrapping
  - implicitly_unwrapped_optional
  - todo
  - unused_closure_parameter
  - unused_optional_binding
  - implicit_optional_initialization
  - redundant_type_annotation
  - redundant_void_return
  - single_test_class
  - sorted_first_last
  - switch_case_on_newline
  - toggle_bool
  - trailing_comma
  - unneeded_parentheses_in_closure_argument
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - closure_body_length
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - discouraged_object_literal
  - empty_collection_literal
  - enum_case_associated_values_count
  - extension_access_modifier
  - fallthrough
  - file_header
  - force_cast
  - force_try
  - function_default_parameter_at_end
  - identical_operands
  - implicit_return
  - joined_default_parameter
  - legacy_random
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - multiline_parameters_brackets
  - no_space_in_method_call
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - pattern_matching_keywords
  - required_enum_case
  - return_arrow_whitespace
  - sorted_imports
  - static_operator
  - strong_iboutlet
  - test_case_accessibility
  - yoda_condition

analyzer_rules:
  - unused_import

# Rule configs
force_unwrapping:
  severity: warning

force_cast:
  severity: warning

force_try:
  severity: warning

todo:
  severity: warning

trailing_comma:
  mandatory_comma: false

# File header configuration for new project structure
file_header:
  required_pattern: |
                    \/\/
                    \/\/  .*\.swift
                    \/\/  Food Scanner
                    \/\/
                    \/\/  Created by .* on .*\.
                    \/\/  Copyright Â© .*\. All rights reserved\.
                    \/\/

# Swift 6.2 specific configurations
modifier_order:
  preferred_modifier_order: [override, acl, setterACL, dynamic, mutators, lazy, final, required, convenience, typeMethods, owned]

# Test-specific configurations
test_case_accessibility:
  test_parent_classes: ["XCTestCase", "QuickSpec", "Behavior"]

# Path-specific rules for new project structure
custom_rules:
  # Models should be simple data structures
  model_complexity:
    name: "Model Complexity"
    regex: '^(struct|class|enum).*Model.*\{'
    message: "Models should be simple data structures. Consider splitting complex models."
    severity: warning
    match_kinds: [comment, doccomment, identifier, keyword, number, objectliteral, parameter, placeholder, string, typeidentifier]
    excluded: ".*Tests.*"

  # Services should be protocols
  service_protocol:
    name: "Service Protocol"
    regex: 'class.*Service.*\{'
    message: "Services should implement protocols for better testability."
    severity: warning
    match_kinds: [comment, doccomment, identifier, keyword, number, objectliteral, parameter, placeholder, string, typeidentifier]

  # API models should be Codable
  api_model_codable:
    name: "API Model Codable"
    regex: 'struct.*API.*\{'
    message: "API models should conform to Codable for JSON serialization."
    severity: warning
    match_kinds: [comment, doccomment, identifier, keyword, number, objectliteral, parameter, placeholder, string, typeidentifier]
    excluded: ".*Codable.*"

  # Test files should follow naming convention
  test_naming:
    name: "Test Naming"
    regex: 'class.*Tests.*\{'
    message: "Test classes should end with 'Tests' suffix."
    severity: warning
    match_kinds: [comment, doccomment, identifier, keyword, number, objectliteral, parameter, placeholder, string, typeidentifier]